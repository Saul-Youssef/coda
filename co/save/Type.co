#
#   Common properties of multiple types
#
#  make/Make - type creation from input - a "type" in the coda sense
#  sum/Sum - Abelian sum
#  prod/Prod - Associative multiplication
#  sort/Sort - Sort compatible with a partial order
#  class/Class - Equivalence classes of an equivalence relation
#  inv/Inv - Involution
#
#
def make  :    {(Make:A) A : B}
def sum   :     {(Sum:A) A : B}
def prod  :    {(Prod:A) A : B}
def term  :    {(Term:A) A : B}
def sort  :    {(Sort:A) A : B}
def inv   :     {(Inv:A) A : B}
def extra :   {(Extra:A) A : B}
def class :   {(Class:A) A : B}

def sum2 : {(Sum:(first:dom:B)) (first:dom:B) : B}
