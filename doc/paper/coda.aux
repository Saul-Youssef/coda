\relax 
\citation{Type}
\citation{Type2}
\citation{HOTT}
\citation{aldor}
\citation{ZFC}
\citation{github}
\@writefile{toc}{\contentsline {section}{\numberline {1}Foundation}{1}{}\protected@file@percent }
\citation{ZFC}
\citation{github}
\@writefile{toc}{\contentsline {section}{\numberline {2}Atoms}{2}{}\protected@file@percent }
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces {\it  Typical definitions in coda. Each definition is a partial function from codas to data defined on codas with a specified domain. When multiple actions are listed, the total action is defined by the first action where the left hand side pattern applies.}}}{3}{}\protected@file@percent }
\newlabel{ }{{1}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Logic}{3}{}\protected@file@percent }
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces {\it  Built in definitions are typically combinatoric operations on data as finite sequences. The `ap' series are variations on the idea of applying the `argument' A to `input' B, done in various ways.}}}{4}{}\protected@file@percent }
\newlabel{ }{{2}{4}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces {\it  Examples of true/false/undecided data in a context where defined domains are shown with bold text.}}}{4}{}\protected@file@percent }
\newlabel{ }{{3}{4}}
\citation{github}
\citation{github}
\@writefile{toc}{\contentsline {section}{\numberline {4}Language}{5}{}\protected@file@percent }
\newlabel{eqn}{{3}{5}}
\newlabel{eqn}{{4}{5}}
\newlabel{eqn}{{5}{5}}
\newlabel{eqn}{{6}{5}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Proof and Computation}{5}{}\protected@file@percent }
\citation{github}
\citation{github}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces {\it  Excerpt from a coda notebook session. The top cell shows the `first' command selecting the first two items from the `input' sequence of four codas. The middle cell shows the same operation using `step' to show the individual steps evaluating the data `\{first 2 : a b c d\}:' which is the coda definition of the language expression `first 2 : a b c d'. Since the language is a definition in context like any other, language operations mix with other definitions as evaluation proceeds. The third cell shows a typical definition added within the language.}}}{6}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {6}Spaces}{6}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces {\it  A excerpt from a coda notebook session\cite  {github}. Each cell is evaluated with the simple strategy explained in the text for up to ten steps. The top cell uses `step :' so each step in the strategy is displayed, showing how (nat:0) is lazily representing the natural numbers. Note the language elements mixing with other data in the early steps. The lower two cells show that if one computes something that has no answer, like the last natural number (last:nat:0), coda reacts by providing undecidable data as an answer.}}}{7}{}\protected@file@percent }
\newlabel{eqn}{{7}{7}}
\newlabel{eqn}{{8}{7}}
\newlabel{eqn}{{9}{7}}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces {\it  Examples of spaces and their morphisms. Of the spaces listed, only pass, null, type n and Space are types. the neutral elements are (n:0) for sum n, (n:1) for prod n, the empty equivalence class for set n and pass for Sum n, Sum and Mor. All others have neutral element ().}}}{8}{}\protected@file@percent }
\newlabel{eqn}{{10}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces {\it  Excerpt from a coda notebook session showing a first demonstration of a situation where one is attempting to classify some mathematical objects of interest. In this case, searching for a data S that distinguishes a sample of data with odd numbers of (:) atoms (displayed as circles with a small circle inside) from a sample of data with even numbers of (:) atoms. A search of 14,098 arbitrarily generated data (some shown), yields three successes including `aps not' as discussed in the text.}}}{9}{}\protected@file@percent }
\citation{Godel}
\@writefile{toc}{\contentsline {section}{\numberline {7}Is Mathematics Consistent?}{10}{}\protected@file@percent }
\newlabel{eqn}{{11}{10}}
\newlabel{eqn}{{12}{10}}
\@writefile{toc}{\contentsline {section}{\numberline {8}Paradoxes}{10}{}\protected@file@percent }
\citation{Berry}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.1}G\"{o}del}{11}{}\protected@file@percent }
\newlabel{eqn}{{13}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.2}Berry}{11}{}\protected@file@percent }
\citation{Curry}
\citation{Yablo}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.3}Curry}{12}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {8.4}Yablo}{12}{}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces {\it  Evaluation of Yablo's paradox in coda.}}}{13}{}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {8.5}Questions that have no answers}{13}{}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {9}Summary}{13}{}\protected@file@percent }
\bibcite{Type}{1}
\bibcite{Type2}{2}
\bibcite{HOTT}{3}
\bibcite{aldor}{4}
\bibcite{ZFC}{5}
\bibcite{github}{6}
\bibcite{egg}{7}
\bibcite{Curry}{8}
\bibcite{Godel}{9}
\bibcite{Yablo}{10}
\bibcite{Berry}{11}
\gdef \@abspage@last{14}
