#
#    Conventional contents for types
#
def sum:  {(Sum:A)     : B}
def prod: {(Prod:A)    : B}
def term: {ap (Term:A) : B}
def inv:  {ap (Inv:A)  : B}
#def type: {(container : postfix _: B) (B:)}

def pf_ : {postfix _ : B}
#
#    Functors
#
def Float : {
    ( def (pf_:first:B) : )
    ( def      (first:B) : disr {ap put (pf_:A) : ap float1 : B} {sel (pf_:A) : B} (rev:B) )
    ( def ( Sum:first:B) : {ap put (pf_:A) : app float_add : get (pf_:A) : A : B} (first:B) )
    ( def (Prod:first:B) : {ap put (pf_:A) : app float_mult: get (pf_:A) : A : B} (first:B) )
    ( def (Term:first:B) : {get (pf_:A) : A : B } (first:B) )
    }

def String : {
    ( def (pf_:first:B) : )
    ( def (first:B) : disr {ap put (pf_:A) : get : B} {sel (pf_:A) : B} (rev:B) )
    ( def (Term:first:B) : {get (pf_:A) : A : B} (first:B) )
    }

def Natural : {
    ( def (pf_:first:B) : )
    ( def      (first:B) : disr {ap put (pf_:A) : ap nat1 : B} {sel (pf_:A) : B} (rev:B) )
    ( def ( Sum:first:B) : {ap put (pf_:A) : app int_add : get (pf_:A) : A : B} (first:B) )
    ( def (Prod:first:B) : {ap put (pf_:A) : app int_mult: get (pf_:A) : A : B} (first:B) )
    ( def (Term:first:B) : {get (pf_:A) : A : B } (first:B) )
    }

def Integer : {
    ( def (pf_:first:B) : )
    ( def     (first:B)  : disr {ap put (pf_:A) : ap nat1 : B} {sel (pf_:A) : B} (rev:B) )
    ( def (Sum:first:B)  : {ap put (pf_:A) : app int_add : get (pf_:A) : A : B} B )
    ( def (Prod:first:B) : {ap put (pf_:A) : app int_mult: get (pf_:A) : A : B} B )
    ( def (Inv:first:B)  : {put (pf_:A) : int_inv : get (pf_:A) : A : B} B )
    ( def (Term:first:B) : {get (pf_:A) : A : B } B )
    }
